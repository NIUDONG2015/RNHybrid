apply plugin: 'com.android.application'
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "view.niudong.com.demo"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 2
        versionName "1.0.2"
        multiDexEnabled true //Howard 2017-08-31 解决方法数超过65536的问题
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//不检查图片格式
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
}
//为了从Bintray Maven仓库获取Crab，需要在Module的build.gradle文件中添加Bintray Maven仓库地址
repositories {
    //    maven {
//    maven { url '//        url \'https://dl.bintray.com/crab/baidu\'' }
    //    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //使用RecyclerView库
    implementation 'me.drakeet.multitype:multitype:3.0.0', {
        exclude group: 'com.android.support'
    }
    //  V4包 ViewPager    Fragment
    //内存泄漏
    //    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    //    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    //    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    //权限校验
    // http://p.codekk.com/detail/Android/mylhyl/AndroidAcp
    //刷新的封装
    // compile 'crab.baidu.crabsdk:crabsdk:latest.release@aar'  //百度奔溃测试
    implementation 'com.android.support:recyclerview-v7:27.1.0'
    implementation 'in.srain.cube:ultra-ptr:1.0.9'
    implementation 'com.android.support.constraint:constraint-layout:1.0.0-alpha5'
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.androidkun:XTabLayout:1.1.3'
    implementation 'com.ashokvarma.android:bottom-navigation-bar:1.3.1'
    implementation 'com.android.support:support-v4:27.1.0'
    //Ping++支付
    implementation 'com.pingxx:pingpp-core:2.1.12'
    implementation 'com.pingxx:pingpp-alipay:2.1.12'
    //网络框架
    implementation 'com.squareup.okhttp3:okhttp:3.0.1'
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'de.hdodenhof:circleimageview:2.0.0'
    implementation 'com.google.code.gson:gson:2.2.4'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.1'
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.1.2'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.squareup.okhttp:okhttp:2.4.0'
    implementation 'com.mylhyl:acp:1.1.5'
    //引入
    implementation 'com.android.support:cardview-v7:27.1.0'
    //AOP
    implementation 'org.aspectj:aspectjrt:1.8.12'
    //    日期
    implementation 'com.contrarywind:Android-PickerView:4.1.5'
    //    testImplementation 'junit:junit:4.12'
    //    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    //    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
//    rn
    implementation "com.facebook.react:react-native:+" // From node_modules

}

android.applicationVariants.all { variant ->
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler)

        def log = project.logger
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
